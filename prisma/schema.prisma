// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

model Admin {
  id          Int      @id @default(autoincrement())
  firstName   String   @map("first_name") @db.VarChar(100)
  lastName    String   @map("last_name") @db.VarChar(100)
  email       String   @unique @db.VarChar(255)
  birthDate   DateTime @map("birth_date") @db.Date
  gender      Gender
  password    String   @db.VarChar(255)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("admins")
}

model Employee {
  id        Int      @id @default(autoincrement())
  firstName String   @map("first_name") @db.VarChar(100)
  lastName  String   @map("last_name") @db.VarChar(100)
  email     String   @unique @db.VarChar(255)
  phone     String   @map("phone_number") @db.VarChar(20)
  address   String   @db.Text
  gender    Gender
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  leaves Leave[]

  @@map("employees")
}

model Leave {
  id        Int      @id @default(autoincrement())
  reason    String   @db.Text
  startDate DateTime @map("start_date") @db.Date
  endDate   DateTime @map("end_date") @db.Date
  days      Int      @default(1)
  year      Int
  month     Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  employeeId Int      @map("employee_id")
  employee   Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)

  @@map("leaves")
}
